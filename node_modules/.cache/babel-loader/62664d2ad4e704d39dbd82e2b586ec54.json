{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\ColorChip\\\\src\\\\components\\\\UploadPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as S from '../styled/App';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadPage = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [name, setName] = useState();\n  const [input, setInput] = useState('#');\n  const [user, setUser] = useState();\n  let history = useHistory();\n  useEffect(() => {\n    if (input === '') {\n      setInput('#');\n    }\n  }, [input]);\n\n  function getCookie(cName) {\n    cName = cName + '=';\n    var cookieData = document.cookie;\n    var start = cookieData.indexOf(cName);\n    var cValue = '';\n\n    if (start !== -1) {\n      start += cName.length;\n      var end = cookieData.indexOf(';', start);\n      if (end === -1) end = cookieData.length;\n      cValue = cookieData.substring(start, end);\n    }\n\n    return unescape(cValue);\n  }\n\n  useEffect(() => {\n    if (getCookie('c-token')) {\n      axios.get('http://color-chip.herokuapp.com/user').then(res => setUser(res.data)).catch(error => {\n        history.push('/');\n        alert(\"로그인을 해주세요.\");\n      });\n    } else {\n      history.push('/');\n      alert(\"로그인을 해주세요.\");\n    }\n  }, [history]);\n\n  const onChange = value => {\n    if (input.length <= 7) {\n      setInput(value.replace(/[^a-f0-9#]/ig, ''));\n    }\n  };\n\n  const addColor = () => {\n    console.log(input);\n\n    if (list.length <= 100 && input.length >= 3) {\n      if (input) {\n        if (list.includes(input)) {\n          alert(\"중복되는 색 입니다.\");\n        } else {\n          console.log(list.includes(item => item === input));\n          setList([...list, input]);\n        }\n      }\n    } else {\n      alert(\"잘못된 입력입니다.\");\n    }\n\n    setInput(\"#\");\n  };\n\n  const Regist = () => {\n    if (name) {\n      if (list) {\n        axios.post('http://color-chip.herokuapp.com/pallete', {\n          name: name,\n          color: [...list],\n          master: user\n        }).then(res => alert(res.data));\n      } else {\n        alert(\"색깔을 추가해 주세요.\");\n      }\n    } else {\n      alert(\"이름을 입력해주세요.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Body, {\n    children: /*#__PURE__*/_jsxDEV(S.UDiv, {\n      children: /*#__PURE__*/_jsxDEV(S.RegistDiv, {\n        children: [/*#__PURE__*/_jsxDEV(S.PB, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            onChange: e => setName(e.target.value),\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uC0C9\\uAE54(\", list.length, \"/100)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.ACDiv, {\n          children: [/*#__PURE__*/_jsxDEV(S.Input, {\n            placeholder: \"\\uC0C9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            onChange: e => onChange(e.target.value),\n            value: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addColor(),\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), list.map(i => /*#__PURE__*/_jsxDEV(S.UCDiv, {\n          children: [/*#__PURE__*/_jsxDEV(S.UColor, {\n            color: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(S.UC, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"far fa-trash-alt\",\n              onClick: () => setList(list.filter(item => item !== i))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(S.Regist, {\n          onClick: () => Regist(),\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadPage, \"gsUaUzx0L4CiihBDJZo77FHzG8o=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadPage;\nexport default UploadPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/문서/GitHub/ColorChip/src/components/UploadPage.js"],"names":["React","useEffect","useState","S","axios","useHistory","UploadPage","list","setList","name","setName","input","setInput","user","setUser","history","getCookie","cName","cookieData","document","cookie","start","indexOf","cValue","length","end","substring","unescape","get","then","res","data","catch","error","push","alert","onChange","value","replace","addColor","console","log","includes","item","Regist","post","color","master","e","target","map","i","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as S from '../styled/App'\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UploadPage = () => {\r\n\r\n    const [list, setList] = useState([])\r\n    const [name, setName] = useState();\r\n    const [input, setInput] = useState('#');\r\n    const [user, setUser] = useState();\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(input === ''){\r\n            setInput('#');\r\n        }\r\n    },[input])\r\n\r\n    function getCookie(cName) {\r\n        cName = cName + '=';\r\n        var cookieData = document.cookie;\r\n        var start = cookieData.indexOf(cName);\r\n        var cValue = '';\r\n        if(start !== -1){\r\n        start += cName.length;\r\n        var end = cookieData.indexOf(';', start);\r\n        if(end === -1)end = cookieData.length;\r\n        cValue = cookieData.substring(start, end);\r\n        }\r\n        return unescape(cValue);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(getCookie('c-token')){\r\n            axios.get('http://color-chip.herokuapp.com/user')\r\n                .then(res => setUser(res.data))\r\n                .catch(error => {\r\n                    history.push('/')\r\n                    alert(\"로그인을 해주세요.\")\r\n                })\r\n        }\r\n        else{\r\n            history.push('/')\r\n            alert(\"로그인을 해주세요.\")\r\n        }\r\n    },[history, ])\r\n\r\n    const onChange = (value) => {\r\n        if(input.length <= 7){\r\n            setInput(value.replace(/[^a-f0-9#]/ig, ''));\r\n        }\r\n    }\r\n\r\n    const addColor = () => {\r\n        console.log(input);\r\n        if(list.length <= 100 && input.length >= 3){\r\n        if(input){\r\n            if(list.includes(input)){\r\n                alert(\"중복되는 색 입니다.\")\r\n            }\r\n            else{\r\n                console.log(list.includes(item => item === input))\r\n                setList([...list, input]);\r\n            }\r\n            }\r\n        }\r\n        else{\r\n            alert(\"잘못된 입력입니다.\")\r\n        }\r\n        setInput(\"#\");\r\n    }\r\n\r\n    const Regist = () => {\r\n        if(name){\r\n            if(list){\r\n                axios.post('http://color-chip.herokuapp.com/pallete', {name: name, color: [...list], master: user})\r\n                    .then(res => alert(res.data))\r\n            }\r\n            else{\r\n                alert(\"색깔을 추가해 주세요.\")\r\n            }\r\n        }\r\n        else{\r\n            alert(\"이름을 입력해주세요.\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <S.Body>\r\n            <S.UDiv>\r\n                <S.RegistDiv>\r\n                <S.PB>\r\n                <h2>제목</h2>\r\n                <input placeholder=\"제목을 입력해주세요.\" onChange={(e)=>setName(e.target.value)} value={name}></input>\r\n                </S.PB>\r\n                <h2>색깔({list.length}/100)</h2>\r\n                <S.ACDiv>\r\n                <S.Input placeholder=\"색을 입력해주세요.\" onChange={(e)=>onChange(e.target.value)} value={input} />\r\n                <button onClick={()=>addColor()}>추가</button>\r\n                </S.ACDiv>\r\n                {list.map(\r\n                    i => (\r\n                        <S.UCDiv>\r\n                            <S.UColor color={i}/><S.UC><span>{i}</span><i class=\"far fa-trash-alt\" onClick={()=>setList(list.filter(item => item !== i))}></i></S.UC>\r\n                        </S.UCDiv>\r\n                    )\r\n                )}\r\n                <S.Regist onClick={()=>Regist()}>등록</S.Regist>\r\n                </S.RegistDiv>\r\n            </S.UDiv>\r\n        </S.Body>\r\n    )\r\n}\r\n\r\nexport default UploadPage;"]},"metadata":{},"sourceType":"module"}